name: Build and Test

# 触发条件：push到主分支或pull request
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # 检出代码
    - name: Checkout code
      uses: actions/checkout@v4
    
    # 设置Go环境
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.3'  # 与go.mod中的版本保持一致
    
    # 缓存Go模块
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    # 下载依赖
    - name: Download dependencies
      run: go mod download
    
    # 验证依赖
    - name: Verify dependencies
      run: go mod verify
    
    # 运行测试（如果有的话）
    - name: Run tests
      run: go test -v ./...
    
    # 编译程序
    - name: Build application
      run: |
        go build -v -o kiro2api .
        ls -la kiro2api
    
    # 上传编译产物
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: kiro2api-${{ github.sha }}
        path: kiro2api
        retention-days: 30

  # 多平台编译job
  cross-compile:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Windows不支持arm64
          - goos: windows
            goarch: arm64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.3'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          go build -v -o kiro2api-${{ matrix.goos }}-${{ matrix.goarch }}.exe .
        else
          go build -v -o kiro2api-${{ matrix.goos }}-${{ matrix.goarch }} .
        fi
    
    - name: Upload cross-compiled artifact
      uses: actions/upload-artifact@v3
      with:
        name: kiro2api-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.sha }}
        path: kiro2api-${{ matrix.goos }}-${{ matrix.goarch }}*
        retention-days: 30
